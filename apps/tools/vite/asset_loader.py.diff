--- /Users/dfoster/Desktop/asset_loader.old.py	2024-02-28 12:07:43
+++ /Users/dfoster/Desktop/asset_loader.new.py	2024-02-28 12:18:14
@@ -50,32 +50,35 @@
     # Default Vite server path to React RefreshRuntime for @vitejs/plugin-react.
     react_refresh_url: str = "@react-refresh"
 
 
 class ManifestEntry(NamedTuple):
     """
     Represent an entry for a file inside the "manifest.json".
     """
 
     file: str
     src: Optional[str] = None
     isEntry: Optional[bool] = False
     isDynamicEntry: Optional[bool] = False
     css: Optional[List[str]] = []
     imports: Optional[List[str]] = []
     dynamicImports: Optional[List[str]] = []
+    # BEGIN: Added by TechSmart
+    assets: Optional[List[str]] = []
+    # END: Added by TechSmart
 
 
 class ManifestClient:
     """
     A client for accessing entries in the compiled vite config's "manifest.json".
     Only parses manifest.json if dev_mode=False.
 
     Public Methods:
         get(path: str) -- return the ManifestEntry for the given path.
     """
 
     def __init__(
         self, config: DjangoViteConfig, app_name: str = DEFAULT_APP_NAME
     ) -> None:
         self._config = config
         self.app_name = app_name
@@ -472,34 +475,48 @@
     def generate_vite_asset_url(self, path: str) -> str:
         """
         Generates only the URL of an asset managed by ViteJS.
         Warning, this function does not generate URLs for dependant assets.
 
         Arguments:
             path {str} -- Path to a Vite asset.
 
         Returns:
             str -- The URL of this asset.
         """
 
         if self.dev_mode:
             return self._get_dev_server_url(path)
 
         manifest_entry = self.manifest.get(path)
+        
+        # BEGIN: Added by TechSmart
+        import os.path
+        (_, path_ext) = os.path.splitext(path)
+        if path_ext in ['.jpg', '.png', '.svg']:  # is image?
+            # Non JS asset
+            (manifest_file,) = manifest_entry.assets
+            assert manifest_file.endswith(path_ext)
+        else:
+            # JS asset
+            manifest_file = manifest_entry.file
+        # END: Added by TechSmart
 
-        return self._get_production_server_url(manifest_entry.file)
+        # BEGIN: Changed by TechSmart
+        return self._get_production_server_url(manifest_file)
+        # END: Changed by TechSmart
 
     def generate_vite_legacy_polyfills(
         self,
         **kwargs: Dict[str, str],
     ) -> str:
         """
         Generates a <script> tag to the polyfills
         generated by '@vitejs/plugin-legacy' if used.
         This tag must be included at end of the <body> before
         including other legacy scripts.
 
         Keyword Arguments:
             **kwargs {Dict[str, str]} -- Adds new attributes to generated
                 script tags.
 
         Raises:
